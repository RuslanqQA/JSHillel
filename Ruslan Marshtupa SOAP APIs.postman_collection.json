{
	"info": {
		"_postman_id": "a0ae3b3c-06bf-4042-a723-1396c1d0f91a",
		"name": "Ruslan Marshtupa SOAP APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36469582"
	},
	"item": [
		{
			"name": "Is Valid ISBN10 Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const xml2js = require('xml2js');\r",
							"\r",
							"xml2js.parseString(pm.response.text(), { explicitArray: false }, function (err, result) {\r",
							"    if (err) {\r",
							"        console.log(\"Помилка парсингу XML:\", err);\r",
							"    } else {\r",
							"        console.log(\"Отриманий JSON:\", result);\r",
							"\r",
							"        pm.test(\"XML парситься без помилок\", function () {\r",
							"            pm.expect(err).to.equal(null);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Має бути тег soap:Envelope\", function () {\r",
							"            pm.expect(result).to.have.property('soap:Envelope');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Envelope має містити Body\", function () {\r",
							"            pm.expect(result['soap:Envelope']).to.have.property('soap:Body');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Body має містити m:IsValidISBN10Response\", function () {\r",
							"            pm.expect(result['soap:Envelope']['soap:Body']).to.have.property('m:IsValidISBN10Response');\r",
							"        });\r",
							"\r",
							"        pm.test(\"IsValidISBN10Response має містити m:IsValidISBN10Result\", function () {\r",
							"            pm.expect(result['soap:Envelope']['soap:Body']['m:IsValidISBN10Response']).to.have.property('m:IsValidISBN10Result');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Перевірка, що m:IsValidISBN10Result дорівнює 'true' або 'false'\", function () {\r",
							"            const isbnResult = result['soap:Envelope']['soap:Body']['m:IsValidISBN10Response']['m:IsValidISBN10Result'];\r",
							"            pm.expect([\"true\", \"false\"]).to.include(isbnResult);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Перевірка що результат є рядком\", function () {\r",
							"            const isbnResult = result['soap:Envelope']['soap:Body']['m:IsValidISBN10Response']['m:IsValidISBN10Result'];\r",
							"            pm.expect(typeof isbnResult).to.equal('string');\r",
							"        });\r",
							"\r",
							"        pm.test(\"SOAP Envelope має правильний namespace\", function () {\r",
							"            pm.expect(pm.response.text()).to.include('xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"');\r",
							"        });\r",
							"\r",
							"        pm.test(\"XML декларація присутня\", function () {\r",
							"            pm.expect(pm.response.text()).to.include('<?xml version=\"1.0\"');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Тіло відповіді не порожнє\", function () {\r",
							"            pm.expect(pm.response.text()).to.not.be.empty;\r",
							"        });\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN10 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>0-19-852663-6</sISBN>\n    </IsValidISBN10>\n  </soap:Body>\n</soap:Envelope>"
				},
				"url": {
					"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
					"protocol": "http",
					"host": [
						"webservices",
						"daehosting",
						"com"
					],
					"path": [
						"services",
						"isbnservice.wso"
					]
				},
				"description": "The test is done by calculation on the first 9 digits and compare the result with the checksum number at the end. You have to pass a 10 digits number or 8 digits and an X."
			},
			"response": []
		},
		{
			"name": "Is Valid ISBN13 Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const xml2js = require('xml2js');\r",
							"\r",
							"xml2js.parseString(pm.response.text(), { explicitArray: false }, function (err, result) {\r",
							"    if (err) {\r",
							"        console.log(\"Помилка парсингу XML:\", err);\r",
							"    } else {\r",
							"        console.log(\"Отриманий JSON:\", result);\r",
							"\r",
							"        pm.test(\"XML парситься без помилок\", function () {\r",
							"            pm.expect(err).to.equal(null);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Має бути тег soap:Envelope\", function () {\r",
							"            pm.expect(result).to.have.property('soap:Envelope');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Envelope має містити Body\", function () {\r",
							"            pm.expect(result['soap:Envelope']).to.have.property('soap:Body');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Body має містити m:IsValidISBN13Response\", function () {\r",
							"            pm.expect(result['soap:Envelope']['soap:Body']).to.have.property('m:IsValidISBN13Response');\r",
							"        });\r",
							"\r",
							"        pm.test(\"IsValidISBN13Response має містити m:IsValidISBN13Result\", function () {\r",
							"            pm.expect(result['soap:Envelope']['soap:Body']['m:IsValidISBN13Response']).to.have.property('m:IsValidISBN13Result');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Перевірка, що m:IsValidISBN13Result дорівнює 'true' або 'false'\", function () {\r",
							"            const isbnResult = result['soap:Envelope']['soap:Body']['m:IsValidISBN13Response']['m:IsValidISBN13Result'];\r",
							"            pm.expect([\"true\", \"false\"]).to.include(isbnResult);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Перевірка що результат є рядком\", function () {\r",
							"            const isbnResult = result['soap:Envelope']['soap:Body']['m:IsValidISBN13Response']['m:IsValidISBN13Result'];\r",
							"            pm.expect(typeof isbnResult).to.equal('string');\r",
							"        });\r",
							"\r",
							"        pm.test(\"SOAP Envelope має правильний namespace\", function () {\r",
							"            pm.expect(pm.response.text()).to.include('xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"');\r",
							"        });\r",
							"\r",
							"        pm.test(\"XML декларація присутня\", function () {\r",
							"            pm.expect(pm.response.text()).to.include('<?xml version=\"1.0\"');\r",
							"        });\r",
							"\r",
							"        pm.test(\"Тіло відповіді не порожнє\", function () {\r",
							"            pm.expect(pm.response.text()).to.not.be.empty;\r",
							"        });\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN13 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>978-1-4612-9090-2</sISBN>\n    </IsValidISBN13>\n  </soap:Body>\n</soap:Envelope>"
				},
				"url": {
					"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
					"protocol": "http",
					"host": [
						"webservices",
						"daehosting",
						"com"
					],
					"path": [
						"services",
						"isbnservice.wso"
					]
				},
				"description": "The test is done by calculation on the first 12 digits and compare the result with the checksum number at the end. You have to pass a 13 digits number."
			},
			"response": []
		}
	]
}